# Generated by Django 3.2 on 2023-09-18 12:13

import config.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('pers_num', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(50), django.core.validators.MinValueValidator(1)], verbose_name='Вместимость')),
                ('description_short', models.TextField(max_length=256, verbose_name='Короткое описание')),
                ('description_long', models.TextField(blank=True, null=True, verbose_name='Подробное описание')),
                ('price_weekday', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Цена по будням')),
                ('price_holiday', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Цена по выходным')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Дата добавления')),
                ('is_reserved', models.BooleanField(default=False, verbose_name='Занят')),
            ],
            options={
                'verbose_name': 'Домик',
                'verbose_name_plural': 'Домики',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('bedroom', 'Спальня'), ('guestroom', 'Гостинная')], max_length=20, verbose_name='Комната')),
                ('object_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='object.object')),
            ],
            options={
                'verbose_name': 'Objects room',
                'verbose_name_plural': 'Комнаты',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(help_text='Примеры: Грибников Семён Олегович, Грибников Семён', max_length=300, validators=[django.core.validators.RegexValidator(message='Используйе только буквы латиницу или крилицу.', regex='^([a-zA-Zа-яА-Я]+\\s*){1,3}$')], verbose_name='ФИО')),
                ('sex', models.CharField(choices=[('Мужской', 'Мужской'), ('Женский', 'Женский')], max_length=256, verbose_name='Пол')),
                ('passport_country', models.CharField(help_text='Примеры: Беларусь, Россия, Украина', max_length=256, validators=[django.core.validators.RegexValidator(message='Используйте только кирилицу или латиницу.', regex='^[a-zA-Zа-яА-Я\\s]+$')], verbose_name='Гражданство')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('phone_number', models.CharField(help_text='Примеры: +375(29)123-12-12, 375291231212, 8(029)1231212, 80291231212', max_length=256, validators=[django.core.validators.RegexValidator(message='Введите корректный номер телефона', regex='^[+]?\\d{1,5}\\s?[\\(-]?\\d{1,5}[\\)-]?\\s?(\\d{1,5}-?){1,5}\\d{1,5}$')], verbose_name='Телефон')),
                ('email', models.EmailField(help_text='Пример: user@example.com', max_length=254, verbose_name='Email')),
                ('telegram', models.CharField(blank=True, max_length=256, null=True, verbose_name='Ник Телеграм')),
                ('desired_arrival', models.DateField(verbose_name='Дата заселения')),
                ('desired_departure', models.DateField(verbose_name='Дата выселения')),
                ('status', models.BooleanField(default=False, verbose_name='Статус')),
                ('stat', models.CharField(choices=[('New', 'Новая'), ('Approved', 'Одобрена'), ('Denied', 'Отклонена'), ('Closed', 'Завершена')], default='New', max_length=20, verbose_name='Статус')),
                ('is_finished', models.BooleanField(default=False, verbose_name='Завершена')),
                ('count_adult', models.IntegerField(help_text='От 1 до 20', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Кол-во взрослых')),
                ('count_kids', models.IntegerField(help_text='От 0 до 20', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Кол-во детей')),
                ('pets', models.TextField(blank=True, null=True, verbose_name='Инфо о животных')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий закзачика')),
                ('object', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='object.object', verbose_name='Домик')),
                ('was_object', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='was_purchases', to='object.object', verbose_name='Ранее в заказе')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
            },
        ),
        migrations.CreateModel(
            name='PhotoObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(blank=True, null=True, upload_to='photo_object', validators=[config.validators.validate_image_size], verbose_name='Файл')),
                ('object_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='object.object')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
            },
        ),
        migrations.CreateModel(
            name='ObjectFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Продвинутые удобства', [('Wifi', 'Бесплатный Wi-Fi'), ('Free parking', 'Бесплатная парковка'), ('Terrace', 'Терасса'), ('Balcony', 'Балкон'), ('Conditioner', 'Кондиционер'), ('TV', 'Телевизор'), ('Patio', 'Патио'), ('Brazier', 'Мангал'), ('Personal pier', 'Личный пирс')]), ('Базовые удобства', [('Kitchen', 'Кухня'), ('Fridge', 'Холодильник'), ('Dishes', 'Посуда'), ('Stove', 'Плита'), ('Microwave', 'Микроволновая печь'), ('Dishwasher', 'Посудомоечная машина')]), ('Дополнительно', [('Furniture for babies', 'Мебель для грудных детей'), ('Smoking indoors is prohibited', 'Курение в помещении запрещено'), ('Shower/Bath', 'Душ/Ванна'), ('Washing machine', 'Стиральная машина'), ('Iron', 'Утюг'), ('Hair dryer', 'Фен')])], max_length=256, verbose_name='Тип услуги')),
                ('object_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='object.object', verbose_name='Object')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='Bed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('sgb', 'Single Bed'), ('dbb', 'Double Bed'), ('qsb', 'Queen SizeBed'), ('ksb', 'King SizeBed'), ('exb', 'Extra Bed'), ('crb', 'Crib')], max_length=40, verbose_name='Кровать')),
                ('object_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beds', to='object.object')),
            ],
            options={
                'verbose_name': 'Кровать',
                'verbose_name_plural': 'Кровати',
            },
        ),
    ]
